function PublishNews(){}PublishNews.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},PublishNews.prototype.change=function(){$("#thumbnail_btn").change(function(){var e=this.files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},PublishNews.prototype.listenQiniuUploadEvent=function(){var s=this;$("#thumbnail_btn").change(function(){var a=this.files[0];xfzajax.get({url:"/cms/qiniutoken/",success:function(e){if(200===e.code){var t=e.data.token,n=(new Date).getTime()+"."+a.name.split(".")[1],i={fname:n,params:{},mimeType:["image/png","image/jpeg","image/gif"]},o={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(a,n,t,i,o).subscribe({next:s.handlerUploadProgress,error:s.handlerUploadError,complete:s.handlerUploadComplete})}}})})},PublishNews.prototype.handlerUploadComplete=function(e){var t=$("#progress-group"),n=$(".progress-bar"),i=$("#thumbnail-form"),o="http://qa7m1cg3t.bkt.clouddn.com/"+e.key;t.hide(),n.css({width:0}),i.val(o)},PublishNews.prototype.handlerUploadError=function(e){window.messageBox.showError(e.message),console.log(e.message)},PublishNews.prototype.handlerUploadProgress=function(e){var t=e.total.percent;$("#progress-group").show();var n=$(".progress-bar");n.css({width:t.toFixed(0)+"%"}),n.text(t.toFixed(0)+"%")},PublishNews.prototype.listenSubmitEvent=function(){var l=$("#submit_btn");l.click(function(e){e.preventDefault();var t=$("input[name='title']").val(),n=$("select[name='category']").val(),i=$("input[name='desc']").val(),o=$("input[name='thumbnail']").val(),a=window.ue.getContent(),s=l.attr("data-news-id"),r="";r=s?"/cms/edit_news/":"/cms/publish/",xfzajax.post({url:r,data:{title:t,category:n,desc:i,thumbnail:o,content:a,pk:s},success:function(e){200===e.code&&xfzalert.alertSuccess("新闻发布成功！",function(){window.location.reload()})}})})},PublishNews.prototype.run=function(){var e=this;e.listenQiniuUploadEvent(),e.initUEditor(),e.listenSubmitEvent(),e.change()},$(function(){(new PublishNews).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
