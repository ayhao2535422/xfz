function Index(){this.page=2,this.category_id=0}Index.prototype.loadMoreClick=function(){var n=this,i=$("#load_more_btn");i.click(function(){xfzajax.get({url:"/news/list/",data:{p:n.page,category_id:n.category_id},success:function(e){if(0===e.code){var t=e.data;if(0<t.length){var a=template("news_item",{newses:t});$(".inner_news_box").append(a),n.page++}else i.hide()}}})})},Index.prototype.categoryTabClick=function(){var o=this;$(".tab_box").children("li").click(function(){var i=$(this).attr("data-category");$(this).addClass("active").siblings().removeClass("active");xfzajax.get({url:"/news/list/",data:{category_id:i,p:1},success:function(e){if(0===e.code){var t=e.data,a=$(".inner_news_box"),n=template("news_item",{newses:t});a.empty(),a.append(n),o.page=2,o.category_id=i}}})})},Index.prototype.run=function(){},$(function(){(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjExMS5qcyJdLCJuYW1lcyI6WyJJbmRleCIsInRoaXMiLCJwYWdlIiwiY2F0ZWdvcnlfaWQiLCJwcm90b3R5cGUiLCJsb2FkTW9yZUNsaWNrIiwic2VsZiIsImxvYWRNb3JlQnRuIiwiJCIsImNsaWNrIiwieGZ6YWpheCIsImdldCIsInVybCIsImRhdGEiLCJwIiwic3VjY2VzcyIsInJlc3VsdCIsIm5ld3NlcyIsImxlbmd0aCIsInRwbCIsInRlbXBsYXRlIiwiYXBwZW5kIiwiaGlkZSIsImNhdGVnb3J5VGFiQ2xpY2siLCJjaGlsZHJlbiIsImF0dHIiLCJhZGRDbGFzcyIsInNpYmxpbmdzIiwicmVtb3ZlQ2xhc3MiLCJ1bCIsImVtcHR5IiwicnVuIl0sIm1hcHBpbmdzIjoiQUFDQSxTQUFTQSxRQUNMQyxLQUFLQyxLQUFPLEVBQ1pELEtBQUtFLFlBQWMsRUFHdkJILE1BQU1JLFVBQVVDLGNBQWdCLFdBQzVCLElBQUlDLEVBQU9MLEtBQ1BNLEVBQWNDLEVBQUUsa0JBQ3BCRCxFQUFZRSxNQUFNLFdBQ2RDLFFBQVFDLElBQUksQ0FDUkMsSUFBTyxjQUNQQyxLQUFRLENBQ0pDLEVBQUtSLEVBQUtKLEtBQ1ZDLFlBQWVHLEVBQUtILGFBRXhCWSxRQUFXLFNBQVVDLEdBQ2pCLEdBQXVCLElBQW5CQSxFQUFhLEtBQVMsQ0FDdEIsSUFBSUMsRUFBU0QsRUFBYSxLQUMxQixHQUFvQixFQUFoQkMsRUFBT0MsT0FBWSxDQUNuQixJQUFJQyxFQUFNQyxTQUFTLFlBQWEsQ0FBQ0gsT0FBVUEsSUFDbENULEVBQUUsbUJBQ1JhLE9BQU9GLEdBQ1ZiLEVBQUtKLFlBRUxLLEVBQVllLGNBUXBDdEIsTUFBTUksVUFBVW1CLGlCQUFtQixXQUMvQixJQUFJakIsRUFBT0wsS0FDRU8sRUFBRSxZQUNSZ0IsU0FBUyxNQUFNZixNQUFNLFdBQ3hCLElBQUlOLEVBQWNLLEVBQUVQLE1BQU13QixLQUFLLGlCQUMvQmpCLEVBQUVQLE1BQU15QixTQUFTLFVBQVVDLFdBQVdDLFlBQVksVUFFbERsQixRQUFRQyxJQUFJLENBQ1JDLElBQU8sY0FDUEMsS0FBUSxDQUNKVixZQUFlQSxFQUNmVyxFQUxHLEdBT1BDLFFBQVcsU0FBVUMsR0FDakIsR0FBdUIsSUFBbkJBLEVBQWEsS0FBUSxDQUNyQixJQUFJQyxFQUFTRCxFQUFhLEtBQ3RCYSxFQUFLckIsRUFBRSxtQkFDUFcsRUFBTUMsU0FBUyxZQUFhLENBQUNILE9BQVVBLElBQzNDWSxFQUFHQyxRQUNIRCxFQUFHUixPQUFPRixHQUNWYixFQUFLSixLQUFPLEVBQ1pJLEVBQUtILFlBQWNBLFNBUXZDSCxNQUFNSSxVQUFVMkIsSUFBTSxhQUl0QnZCLEVBQUUsWUFDYyxJQUFJUixPQUNWK0IiLCJmaWxlIjoiMTExLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5mdW5jdGlvbiBJbmRleCgpIHtcclxuICAgIHRoaXMucGFnZSA9IDI7XHJcbiAgICB0aGlzLmNhdGVnb3J5X2lkID0gMDtcclxufVxyXG5cclxuSW5kZXgucHJvdG90eXBlLmxvYWRNb3JlQ2xpY2sgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIGxvYWRNb3JlQnRuID0gJCgnI2xvYWRfbW9yZV9idG4nKTtcclxuICAgIGxvYWRNb3JlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB4ZnphamF4LmdldCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL25ld3MvbGlzdC8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICdwJzogc2VsZi5wYWdlLFxyXG4gICAgICAgICAgICAgICAgJ2NhdGVnb3J5X2lkJzogc2VsZi5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXdzZXMgPSByZXN1bHRbJ2RhdGEnXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobmV3c2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRwbCA9IHRlbXBsYXRlKCduZXdzX2l0ZW0nLCB7J25ld3Nlcyc6IG5ld3Nlc30pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1bCA9ICQoJy5pbm5lcl9uZXdzX2JveCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1bC5hcHBlbmQodHBsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5wYWdlKytcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRNb3JlQnRuLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufTtcclxuXHJcbkluZGV4LnByb3RvdHlwZS5jYXRlZ29yeVRhYkNsaWNrID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciB0YWJCb3ggPSAkKCcudGFiX2JveCcpO1xyXG4gICAgdGFiQm94LmNoaWxkcmVuKCdsaScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY2F0ZWdvcnlfaWQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtY2F0ZWdvcnknKTtcclxuICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxyXG4gICAgICAgIHZhciBwYWdlID0gMTtcclxuICAgICAgICB4ZnphamF4LmdldCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL25ld3MvbGlzdC8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICdjYXRlZ29yeV9pZCc6IGNhdGVnb3J5X2lkLFxyXG4gICAgICAgICAgICAgICAgJ3AnOiBwYWdlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09PSAwKXtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3c2VzID0gcmVzdWx0WydkYXRhJ107XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHVsID0gJCgnLmlubmVyX25ld3NfYm94Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRwbCA9IHRlbXBsYXRlKCduZXdzX2l0ZW0nLCB7J25ld3Nlcyc6IG5ld3Nlc30pO1xyXG4gICAgICAgICAgICAgICAgICAgIHVsLmVtcHR5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdWwuYXBwZW5kKHRwbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5wYWdlID0gMjtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhdGVnb3J5X2lkID0gY2F0ZWdvcnlfaWRcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufTtcclxuXHJcbkluZGV4LnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbn1cclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGluZGV4ID0gbmV3IEluZGV4KCk7XHJcbiAgICBpbmRleC5ydW4oKTtcclxufSkiXX0=
